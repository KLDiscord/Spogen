"""
 ::::::::  :::::::::   ::::::::   ::::::::  :::::::::: ::::    ::: 
:+:    :+: :+:    :+: :+:    :+: :+:    :+: :+:        :+:+:   :+: 
+:+        +:+    +:+ +:+    +:+ +:+        +:+        :+:+:+  +:+ 
+#++:++#++ +#++:++#+  +#+    +:+ :#:        +#++:++#   +#+ +:+ +#+ 
       +#+ +#+        +#+    +#+ +#+   +#+# +#+        +#+  +#+#+# 
#+#    #+# #+#        #+#    #+# #+#    #+# #+#        #+#   #+#+# 
 ########  ###         ########   ########  ########## ###    #### 
*SPOTIFY GENERATOR BY @KLDISCORD v.1.0 *
"""

import requests, time, psutil, random, json, os, sys, string # importing modules. We need requets, psutil, colorama
from colorama import Fore

with open('settings.json', encoding="utf-8") as f:
  json_data = json.load(f)
  email = json_data['Email']
  pw = json_data['PW']
  accname = json_data['AccName']
  hideinfo = json_data['HideInfo']

g = Fore.GREEN # Importing colors
b = Fore.BLUE
y = Fore.YELLOW
re = Fore.RESET
l = Fore.LIGHTBLACK_EX
blue = Fore.BLUE

url = "https://spclient.wg.spotify.com/signup/public/v1/account" # The url of spotify signup page
headers = { 
  'authority': 'spclient.wg.spotify.com',
  'sec-ch-ua':
  '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
  'sec-ch-ua-mobile': '?0',
  'user-agent':
  'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36',
  'sec-ch-ua-platform': '"Windows"',
  'content-type': 'application/x-www-form-urlencoded',
  'accept': '*/*',
  'origin': 'https://www.spotify.com',
  'sec-fetch-site': 'same-site',
  'sec-fetch-mode': 'cors',
  'sec-fetch-dest': 'empty',
  'referer': 'https://www.spotify.com/',
  'accept-language': 'en-US,en;q=0.9'
} # We will request this header. Do not edit or delete this header or generator will be not work


#========================[ MAIN PROGAM BEGINS HERE ]=============================#

def drawlogo(): # Printing the ascii text logo
  print(f'''{g}
 ::::::::  :::::::::   ::::::::   ::::::::  :::::::::: ::::    ::: 
:+:    :+: :+:    :+: :+:    :+: :+:    :+: :+:        :+:+:   :+: 
+:+        +:+    +:+ +:+    +:+ +:+        +:+        :+:+:+  +:+ 
+#++:++#++ +#++:++#+  +#+    +:+ :#:        +#++:++#   +#+ +:+ +#+ 
       +#+ +#+        +#+    +#+ +#+   +#+# +#+        +#+  +#+#+# 
#+#    #+# #+#        #+#    #+# #+#    #+# #+#        #+#   #+#+# 
 ########  ###         ########   ########  ########## ###    ####
''')

def reloadsettings():
  with open('settings.json', encoding="utf-8") as f:
    json_data = json.load(f)
    email = json_data['Email']
    pw = json_data['PW']
    accname = json_data['AccName']
    hideinfo = json_data['HideInfo']

def random_char(char_num): # We will make a function that makes random letters
  return ''.join(random.choice(string.ascii_letters) for _ in range(char_num))


def mainfunction(): # The made function!

  #==========[ Main Function begins here ]==========#    

  reloadsettings()
  os.system("del Generated.txt")
  os.system("cls") 
  drawlogo()
  print(f"""
{y}Made by @kldiscord | v.1.0

{b}[INFO]{re} You can just use generated accs in us. If you are not in there, try to use vpn

{g}[1]{re} Generate accounts
{g}[2]{re} Information
{g}[3]{re} Settings
{g}[4]{re} Exit Application\n""")
  os.system("title Spogen v.1.0")

  x = input("")
  print("\n") 

  if x == "1": # Generate accounts 
    reloadsettings()
    os.system('cls')
    drawlogo()
    print(f'''
{y}Made by @kldiscord | v.1.0 | Spotify accounts generator

{b}[INFO]{re} Generated accounts will be saved at : {y}Generated.txt{re}
{y}[Spotify generator]{re} Generate free spotify accounts!
''') # Printing menu

    hits = open("Generated.txt", "a") # We are gonna save in Generated.txt
    hits.write("""[ Generated by Spogen - https://github.com/KLDiscord/Spogen ]
[Info] You can just use generated accs in us. If you are not in there, try to use vpn\n
""") # txt file banner
    
    number = 0 # The number of accounts generated
    while True:
      number += 1
      Email = random_char(10) + "@" + email # The email of account
      password = random_char(5) + pw # PW of account
      # "payload" is the data of account like birth, gender, name, etc...
      payload = f'birth_day=3&birtqh_month=07&birth_year=1992&collect_personal_info=undefined&creation_flow=&creation_point=https%3A%2F%2Fwww.spotify.com%2Fus%2F&displayname={accname}&gender=male&iagree=1&key=a1e486e2729f46d6bb368d6b2bcda326&platform=www&referrer=&send-email=0&thirdpartyemail=1&email={Email}&password={password}&password_repeat={password}'
      r = requests.request("POST", url, headers=headers, data=payload) # Generating by posting the header and payload
      print(f"[{g}Generated{y} 3 months free account!{re}] " + Email + ":" + password) # Printing the result.
      hits = open("Generated.txt", "a+") 
      hits.write(Email + ":" + password + "\n") # Writing data
      if hideinfo == "False":
        cpu = str(psutil.cpu_percent(interval=1)) 
        ram = psutil.virtual_memory()
        ram = dict(ram._asdict())['percent']
        os.system(f"title Accs [{number}] CPU [{cpu}%] Memory [{ram}%] ")
      

  elif x == "2":
    os.system('cls')
    drawlogo()
    print(f'''{g}
{y}Made by @kldiscord | v.1.0 | Spotify accounts generator

{b}[Spogen]{re} Spogen by @kldiscord 

{y}[Dev]{re} @kldiscord | https://github.com/KLDiscord/Spogen
{y}[Version]{re} v.1.0 Realease
{y}[Build Info]{re} Built w Py 3.11 in Win10
{y}[Run Info]{re} Available in : Win10 x64, x86 / Repl.it 

{g}[UPD Logs]{re} v.1.0 : Built at 11.11.18
{g}[First version]{re} The first version of spogen, please enjoy!
''')

    input(f"{Fore.RED}[Info]{re} Press any key to go back")
    mainfunction()

  elif x == "3":
    os.system('cls')
    drawlogo()
    print(f'''{g}
{y}Made by @kldiscord | v.1.0 | Spotify accounts generator

{b}[Spogen]{re} Spogen by @kldiscord 

{y}[Email]{re} randomchar@{email}
{y}[Password]{re} randomchar{pw}
{y}[Account Name]{re} {accname}
{y}[Hide PC Info]{re} {hideinfo}
''')
    
    a = input(f"{g}[1]{re} Change email adress\n{g}[2]{re} Change password\n{g}[3]{re} Change Account Name\n{g}[4]{re} Hide / Show PC Info\n{g}[5]{re} Go back to main menu\n\n")
    os.system('cls')
    drawlogo()
    if a == "1":
      em = input(f"\n{y}[INFO]{re} Input your custom email address ( ex. klmail.com, gmail.com, etc... ) ")
      if len(em.split(".")) != 2:
        print(f"\n{Fore.RED}[ERROR]{re} Please input the correct email address!\nGoing back to menu in 3 secs...")
        time.sleep(3)
        mainfunction()
      json_data['Email'] = em
      with open("settings.json", 'w') as outfile:
        json.dump(json_data, outfile, indent=4)
    elif a == "2":
      em = input(f"\n{y}[INFO]{re} Input your custom password ( ex. 1234, spogen, etc... ) ")
      if len(em) >= 10:
        print(f"\n{Fore.RED}[ERROR]{re} Please input less then 10 letters!\nGoing back to menu in 3 secs...")
        time.sleep(3)
        mainfunction()
      json_data['PW'] = em
      with open("settings.json", 'w') as outfile:
        json.dump(json_data, outfile, indent=4)
    elif a == "3":
      em = input(f"\n{y}[INFO]{re} Input your custom account name ( ex. spogenaccount, powergenaccount, etc... ) ")
      if len(em) >= 10:
        print(f"\n{Fore.RED}[ERROR]{re} Please input less then 10 letters!\nGoing back to menu in 3 secs...")
        time.sleep(3)
        mainfunction()
      json_data['AccName'] = em
      with open("settings.json", 'w') as outfile:
        json.dump(json_data, outfile, indent=4)
    elif a == "4":
      em = input(f"\n{y}[INFO]{re} Do you want to hide your pc info when generating? (Y/N) ")
      if em == "Y" or "Yes" or "yes" or "y": em = "True"
      elif em == "N" or "No" or "no" or "n" : em = "False"
      else:
        print(f"\n{Fore.RED}[ERROR]{re} Please input less then 10 letters!\nGoing back to menu in 3 secs...")
        time.sleep(3)
        mainfunction()
      json_data['HideInfo'] = em
      with open("settings.json", 'w') as outfile:
        json.dump(json_data, outfile, indent=4)
    else:
      mainfunction()
    print(f"\n{g}[INFO]{re} Successfully saved settings!\nGoing back to menu in 3 secs...")
    time.sleep(3)  
    mainfunction()
    
  elif x == "4":
    os.system("cls")
    drawlogo()
    
    print(f"\n{Fore.RED}[Close Info]{re} Spogen is closing in 3 secs...\nThank you for using!")
    time.sleep(3)
    sys.exit(0)
    
  else:
    os.system("cls")
    drawlogo()
    
    print(f"\n{Fore.RED}[ERROR]{re} Please input correct number in menu!\nGoing back to menu in 3 secs...")
    time.sleep(3)
    mainfunction()


if __name__ == "__main__":
  mainfunction()
